alias: sag-um-cluster-
description: Universal Messaging realm cluster

environments:
  default:
    repo.product:        ${}
    repo.fix:            ${}
        
    um.license.key.alias: ${}
    um.instance.name:    default            # instance name
    um.instance.port:    9000               # primary port
    um.jmx.port:         9988               # jmx port
    um.memory.init:      1024                 # memory configuration
    um.memory.max:       2048                # memory configuration
    um.memory.direct:    1G                 # memory configuration
    um.fixes:            ${um.fixes}
    um.cluster:          cluster
    um.install.service:  true      


  
    um.host:             ${}                # This is the provisoning host name (where the UM instance / product should be installed)
    um.access.host:      ${um.host}         # This is the access host name (general access - generally should be equal to um.host, but not in case of docker creation)
    um.instance.name:    umserver           # realm server instance name
    um.instance.port:    9000               # primary port
    um.instance.ip:      ${um.host}       # This is the IP that the UM process will bind to
    um.instance.alias:   ${um.instance.name}
=            # minimal recommended set of fixes to apply

    ##some default artifacts in UM
    um.jndi.factory.url: "nsp://${um.access.host}:${um.instance.port}"
    um.jndi.cf:          umcf
    um.jndi.cfxa:        umcfxa
    um.jndi.qcf:         umqcf
    um.jndi.tcf:         umtcf
    um.jndi.dest.queue1:  umqueue
    um.jndi.dest.topic1:  umtopic

layers:
  runtime:
    productRepo: ${repo.product}
    fixRepo:     ${repo.fix}
    templates:
      - um-runtime
      - um-cluster-3 # ${cluster.size}

templates:
  um-runtime:
    licenses:
      "UniversalMessaging/server/templates/licence.xml": "${um.license.key.alias}"
    fixes: ${um.fixes}
    products:
      NUMRealmServer:
        ${um.instance.name}:                                       # instance name is different from realm
          instance.port: ${um.instance.port}                       # instance port
          instance.ip:   ${node.host}                              # bind to node's host name
          node.alias:    ${node.alias}
          install.service: ${um.install.service}
          license.file:  UniversalMessaging/server/templates/licence.xml
          runtimeComponentId: Universal-Messaging-${instance.name} # hint for CC to skip instance creation if it exists
          configuration:
            Universal-Messaging-${instance.name}: 
              COMMON-MEMORY: 
                COMMON-MEMORY:                                     
                  InitSize: ${um.memory.init}
                  MaxSize:  ${um.memory.max}
                  ExtendedProperties:                              
                    Property: 
                      - 
                       "@name": "-XX:MaxDirectMemorySize"
                       $: ${um.memory.direct}
              COMMON-JAVASYSPROPS: 
                COMMON-JAVASYSPROPS:  
                   REALM: ${node.alias}                             # IMPORTANT: this can only be set before first startup
                   com.sun.management.jmxremote.port: ${um.jmx.port}
                   com.sun.management.jmxremote.authenticate: false
                   com.sun.management.jmxremote.ssl: false
                   CORE_SPIN: false
              UM-JNDI-CF:                                                ## JNDI connection factories for JMS
                UM-JNDI-CF-${um.jndi.cf}:
                  name: ${um.jndi.cf}
                  type: ConnectionFactory
                  url: ${um.jndi.factory.url}
                  durableType: Shared
                UM-JNDI-CF-${um.jndi.cfxa}:
                  name: ${um.jndi.cfxa}
                  type: XAConnectionFactory
                  url: ${um.jndi.factory.url}
                UM-JNDI-CF-${um.jndi.qcf}:
                  name: ${um.jndi.qcf}
                  type: QueueConnectionFactory
                  url: ${um.jndi.factory.url}
                UM-JNDI-CF-${um.jndi.tcf}:
                  name: ${um.jndi.tcf}
                  type: TopicConnectionFactory
                  url: ${um.jndi.factory.url}
                  durableType: Shared
              UM-JNDI-DEST:                                             ## JNDI destinations for JMS (queues or topics)
                UM-JNDI-DEST-${um.jndi.dest.queue1}:
                  name: ${um.jndi.dest.queue1}
                  type: Queue
                  storeName: ${um.jndi.dest.queue1}
                  autoCreateDest: 'true'
                UM-JNDI-DEST-${um.jndi.dest.topic1}:
                  name: ${um.jndi.dest.topic1}
                  type: Topic
                  storeName: ${um.jndi.dest.topic1}
                  autoCreateDest: 'true'

  um-cluster-3:
    description: Cluster configuration for 3 node cluster
    products:
      NUMRealmServer:
        ${um.instance.name}:
          runtimeComponentId: Universal-Messaging-${instance.name}
          configuration:
            Universal-Messaging-${instance.name}:
              COMMON-CLUSTER:
                COMMON-CLUSTER:
                  Name: ${um.cluster}
                  Servers:
                    Server:
                      -
                        "@name": ${um.host}
                        URL: "nsp://${um.host}:${um.instance.port}"
                      -
                        "@name": ${um.host2}
                        URL: "nsp://${um.host2}:${um.instance.port}"
                      -
                        "@name": ${um.host3}
                        URL: "nsp://${um.host3}:${um.instance.port}"

provision:
  default:
    buildtools:  ${nodes}

nodes:
  default:
    default:
      port:   ${spm.port}
      secure: ${spm.secure}
      credentials: ${spm.credentials.alias}
      bootstrapInfo:
        installDir:   ${bootstrap.install.dir}
        installer:    ${bootstrap.install.installer}
        port:         ${bootstrap.ssh.port}
        credentials:  ${bootstrap.credentials.alias}