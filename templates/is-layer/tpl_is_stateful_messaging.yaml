alias: is_stateful_messaging
description: Integration Server Stateful instance connected to DB, Terracotta, and UM

environments:
  default:
    repo.product:        ${}
    repo.fix:            ${}
    repo.spm:            ${repo.product}

    # Integration Server Instance Configuration
    os.platform:           lnxamd64
    is.license.key.alias:  "Integration_Server-${os.platform}"
    tc.license.key.alias:  "terracotta-license-${os.platform}"

    is.host:            ${}
    is.instance.name:   default             # Instance name
    is.primary.port:    5555                # Primary port number
    is.diagnostic.port: 9999                # Dialgnostic port number
    is.jmx.port:        8094                # JMX port number
    is.password:        manage              # Administrator user password
    is.memory.init:     2048                # Initial memory size
    is.memory.max:      4096                # Maximum memory size
    is.install.service: true
    is.configure:       [is-server,um-client]         # List of templates to apply
    is.fixes:           [wMFix.integrationServer.Core]

    # IS clustering
    is.tsa.url:           ${}
    is.cluster.enabled:   true
    is.cluster.name:      "${is.instance.name}-cluster"

    # IS Messaging
    is.um.url:                ${}
    is.um.fixes:              [wMFix.NUMClient]
    is.jms.jndi.alias:        "CUSTOM_IS_JNDI_PROVIDER"
    is.jms.jndi.cf:           umcf
    is.jms.connection.alias:  "CUSTOM_IS_JMS_CONNECTION"
    is.wm.messaging.alias:    "CUSTOM_IS_UM_CONNECTION"

    # Database connection
    db.url:              ${}           # JDBC URL
    db.type:             ${}           # REQUIRED: Database type: oracle,sqlserver,db2
    db.host:             ${}           # REQUIRED: Database server hostname
    db.port:             ${}           # REQUIRED: Database server port
    db.name:             ${}
    db.username:         ${}           # Database username
    db.password:         ${}           # Database password
    db.sid:              ${}           # Database name

    # Remote system configuration
    spm.port:       8092                    # SPM connection port
    spm.secure:     false                   # Use HTTPS connection to SPM: true,false
    spm.configure:  [spm-tuneup]
    spm.fixes:      [wMFix.SPM]             # SPM/SUM/SD core fixes by default

    ## remote provisioning
    spm.host:         ${is.host}                # REQUIRED for all in one installation as default host
    os.username:      ${}                       # remote machine SSH username, default CCE process user account (as java system property)
    os.password:      ${}                       # remote machine SSH password
    os.auth.method:   ${}                       # remote machine authentication method: PASSWORD,INTERACTIVE,CERTIFICATE
    os.auth.key:      ${}                       # keyfile for CERTIFICATE auth method
    os.ssh.port:      ${}                        # remote machine SSH port
    install.dir:      ${}                       # suite installation directory
    install.installer: ${}

  server:

  docker:
    repo.product:       products
    repo.fix:           fixes
    is.host:            localhost
    spm.alias:          local
    is.install.service: false

layers:
  default:
    productRepo: ${repo.product}
    fixRepo:     ${repo.fix}

  spm:
    description: Management layer of SPM's
    templates:   ${spm.configure}

  is:
    description: General purpose IS layer
    templates:   ${is.configure}

templates:
  spm-tuneup:
    description: SPM customizations
    fixes: ${spm.fixes}
    products:
      SPM:
      ISspm:

  um-client:
    fixes: ${um.fixes}
    products:
      NUMClient:

  is-server:
    licenses:
      "IntegrationServer/config/licenseKey.xml": ${is.license.key.alias}
      "common/conf/terracotta-license.key":      ${tc.license.key.alias}
    fixes: ${is.fixes}
    products:
      integrationServer:
        ${is.instance.name}:
          primary.port:    ${is.primary.port}
          diagnostic.port: ${is.diagnostic.port}
          jmx.port:        ${is.jmx.port}
          license.file:    IntegrationServer/config/licenseKey.xml
          install.service: ${is.install.service}
          db.type:         ${db.type}
          db.url:          ${db.url}
          db.username:     ${db.username}
          db.password:     ${db.password}
          db.alias:        Default
          configuration:
            OSGI-IS_${is.instance.name}:
              COMMON-MEMORY:
                COMMON-MEMORY:
                  InitSize: ${is.memory.init}
                  MaxSize: ${is.memory.max}
            integrationServer-${is.instance.name}:
              COMMON-LOCAL-USERS:
                COMMON-LOCAL-USERS-Administrator:
                  "@id": Administrator
                  Enabled: true
                  Password: ${is.password}
                  ExtendedProperties:
                    Property:
                      -
                       "@name": "AllowDigestAuthentication"
                       $: false
              COMMON-JNDI:
                COMMON-JNDI-${is.jms.jndi.alias}:
                  JNDI:
                    "@alias": ${is.jms.jndi.alias}
                    Description: JNDI provider alias
                    Provider:
                      URL: "${is.um.url}"
                      InitialContextFactory: com.pcbsys.nirvana.nSpace.NirvanaContextFactory
              COMMON-WMMESSAGING:
                COMMON-WMMESSAGING-${is.wm.messaging.alias}:
                  Messaging:
                    '@alias': ${is.wm.messaging.alias}
                    Description: UM connection alias
                    ClientPrefix: ${is.wm.messaging.alias}_CLIENT_PREFIX
                    ShareClientPrefix: 'true'
                    Enabled: 'true'
                    Provider:
                      '@type': UM
                      URL: ${is.um.url}
                      MaxRetryAttempts: '5'
                      RetryInterval: '30000'
                      Auth:
                        '@type': none
                    ExtendedProperties:
                      Property:
                      - '@name': useCSQ
                        $: 'true'
                      - '@name': csqDrainInOrder
                        $: 'false'
                      - '@name': enableRequestReply
                        $: 'true'
                      - '@name': csqSize
                        $: '-1'
                      - '@name': um_followTheMasterForSubscribe
                        $: 'true'
                      - '@name': um_followTheMasterForPublish
                        $: 'true'
              COMMON-JMS:
                COMMON-JMS-${is.jms.connection.alias}:
                  JMS:
                    '@alias': ${is.jms.connection.alias}
                    Description: JMS connection alias
                    Enabled: 'true'
                    TransactionType: NO_TRANSACTION
                    ClientId: ${is.jms.connection.alias}_CLIENT
                    Provider:
                      '@type': JNDI
                      JNDIAlias: ${is.jms.jndi.alias}
                      JNDIConnectionFactoryName: ${is.jms.jndi.cf}
                    User: ''
                    MaxRetryAttempts: '0'
                    RetryInterval: '0'
                    Caching: DISABLED
                    ExtendedProperties:
                      Property:
                      - '@name': jndi_connectionFactoryUpdateType
                        $: NONE
                      - '@name': jndi_connectionFactoryPollingInterval
                        $: '0'
                      - '@name': classLoader
                        $: INTEGRATION_SERVER
                      - '@name': csqSize
                        $: '-1'
                      - '@name': csqDrainInOrder
                        $: 'false'
                      - '@name': optTempQueueCreate
                        $: 'false'
                      - '@name': allowReplyToConsumer
                        $: 'false'
                      - '@name': manageDestinations
                        $: 'false'
                      - '@name': allowNewConnectionPerTrigger
                        $: 'true'
              COMMON-CLUSTER:
                COMMON-CLUSTER:
                  Name: ${is.cluster.name}
                  Enabled: ${is.cluster.enabled}
                  Servers:
                    Server:
                      -
                        URL: ${is.tsa.url}

provision:
  default:
    spm: ["${is.host}"]
    is:  ["${is.host}"]
  server:
    spm: ["${is.host}"]
    is:  ["${is.host}"]
  docker:
    spm:  ["${spm.alias}"]
    is:   ["${spm.alias}"]

nodes:
  default:
    default:
      port:   ${spm.port}
      secure: ${spm.secure}
      bootstrapInfo:
        installDir:   ${install.dir}
        installer:    ${install.installer}
        port:         ${os.ssh.port}
        credentials:
          userName:   ${os.username}
          password:   ${os.password}
          authenticationMethod: ${os.auth.method}
          privateKey: ${os.auth.key}
  docker:
    ${spm.alias}:
      host: ${is.host}
